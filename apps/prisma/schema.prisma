datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  APIKey    APIKey[]
}

model APIKey {
  id          Int      @id @default(autoincrement())
  key         String   @unique
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  credit      Int      @default(0)
  usage       Int      @default(0)
  ipWhitelist String[] @default([])
  rateLimit   Int      @default(0) // 0 means no limit
  active      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
}

model Tokens {
  ID                  Int      @id @default(autoincrement())
  PublicKey           String   @unique
  MetaName            String? 
  MetaTicker          String?
  TokenSupply         BigInt   @default(0)
  TokenDecimals       Int      @default(0)
  BurnAmount          BigInt   @default(0)
  MetaChangeAuthority String
  FreezeAuthority     String
  MintAuthority       String
  Owner               String
  InitialMint         DateTime?
  IPO                 DateTime?
  LargestHolders      Json?
  Rugpull             Boolean   @default(false)
  RugpullDate         DateTime?
}